#############################
####                     ####
####   MCMC RSD fitter   ####
####                     ####
#############################

AUTHOR : Claudio Gorgoni

This code is used to fit the multipoles of the 2-point correlation function (2PCF)
in redshift space up to l=0,2,4. 
It uses the CLPT code from Wang & Reid (https://arxiv.org/abs/1306.1804) as input
for the Gaussian Streaming model to give predictions for the multipoles of the 2PCF.
The code uses the python package emcee to perform the MCMC sampling.


##################
#                #
#  requirements  #
#                #
##################

- python2.7
- emcee
- cosmohammer
- getdist < 3.0
- scipy

------------------

The result of the fit gives information about:

	- alpha_p : the line-of-sight distortion parameter
	- alpha_v : the transverse distortion parameter
	- fs8(z)  : the growth rate of structure
	- bs8(z)  : the galaxy bias
	
To use the code you have first to generate a sbatch script using the "mcmc_slurm_gen.py" script.
Then you just have to submit the generated sbatch script to the desired queue.

It is a good idea to perform a first fit of the data to find the optimal initial position for the MCMC sampling.
You can either set the variable "my_guess" to False in the parameter file and a PSO method
(from the cosmoHammer package) will be executed and directly after that the MCMC starts.

Or you can use the "pso_minimizer.py" script that only perform a PSO optimization,
along with its sbatch script generated by "pso_slurm_gen.py".
In this way a file containing the result of the optimization will be created.

#############
# PROCEDURE #
#############

After having specified all the input parameters in the configuration file

You can also use the function 'xi_l' inside the script "GS_multi.py" to generate a multipole.
	
----------------------------------------------------------------------------------------------

To use the code start by adapting the configuration file "par.ini".
Here are the parameters that you can adapt:

	[input]           - INPUT FILES AND FITTING RANGE
	
	- xi, v12, s12    : path to the CLPT output files
	- data_xi*        : path to the l-multipole file
					    Leave the variable empty where you don't have the multipole data.
					    Must provide at least the monopole and its covariance matrix.
	- data_cov        : path to the covariance matrix file
	- Nmocks          : number of mocks used to create the covariance matrix.
	- r_min, r_max    : the fitting range in comoving scale (should be > 20 Mpc/h)
	
	[cosmo]           - FIDUCIAL COSMOLOGY
	
	- h               : the hubble parameter
	- ombh2		      : the baryon density * h^2
	- omm		      : the matter density
	- omL		      : the dark energy density
	- sigma8          : the amplitude of the present day power spectrum at 8 Mpc/h
	- ns              : spectral index
	- mnu             : sum of the masses of the neutrinos (0.06 < mnu < 0.12)
	- omk             : curvature parameter
	- w               : dark energy equation of state
	- z               : redshift of the data
	
	[mcmc]            - MCMC PARAMETERS
	
	- peak_background : (boolean) set to True if you want to use peak backgrouns splitting
					    to infer the value of the 2-order lagrangian bias.
					    Set to False if you want the 2-order lagrangian bias to be treated
					    as a free parameter.
	- ***_min         : minimum value for the priors
	- ***_max         : maximum value for the priors
	- my_guess        : (boolean) set to True if you want to provide manually a starting
                        position for the MCMC sampler (optional).
	                    Set to False to let the code maximize the likelihood function to find the
	                    optimal starting position (can be time consuming).
	- Nparticles      : Number of particles to use in the particle swarm optimizer
	- ***_0           : if my_guess is True, the code uses these parameters as a starting
						position for the MCMC sampler.
	- Nsteps		  : Number of MCMC steps used for the scientific analysis
	- Nburns          : Number of burn-in steps to do before to start the final sampling.
						Thus the total number of steps will be Nburns + Nsteps.
	- Nwalkers        : Number of walkers used in the MCMC sampling.
	- label           : a label used to create a folder into which the files are saved.
	
	[slurm]			  - SLURM SPECIFICATIONS
	
	- queue           : name of the queue on which to send the job
	- ncpus           : number of cores used for multiprocessing
	
----------------------------------------------------------------------------------------------

